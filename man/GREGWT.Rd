% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/GREGWT.R
\name{GREGWT}
\alias{GREGWT}
\title{GREGWT}
\usage{
GREGWT(x, ...)
}
\arguments{
\item{data_in}{(default=FALSE) input data}

\item{area_code}{(default = 1) position of the area code in the benchmark data}

\item{use_ginv}{(default = FALSE) use the ginv function of the MASS library
to compute the inverse matrix.}

\item{Tx}{(default = FALSE) manually specify benchmark vector}

\item{X_input}{(default = FALSE) manually specify survey matrix as dummy
variables without reference categories.}

\item{X_complete_input}{(default = FALSE) manually specify complete survey
matrix as dummy variables with all categories.}

\item{dx_input}{(default = FALSE) manually specify initial weights.}

\item{area_pop}{(default = FALSE) manually specify the total population}

\item{group}{(default = FALSE) position of the grouping variable, implies an
integrated reweighting.}

\item{bounds}{(default = c(0,Inf)) defines the bounds of the estimated
new weights.}

\item{epsilon}{(default = 0.001) defines the desire precision of the model
to achieve convergence.}

\item{max_iter}{(default = 10)}

\item{cat_weights}{(default = FALSE) weights for individual benchmarks. If
not FALSE the function will compute individual weights for each benchmark
(or benchmark group) and compute a weighted mean with the weights define in
variable 'cat <- weights'.}

\item{align_pop}{(default = TRUE) align weights to total population.}

\item{error}{(default = TRUE) compute the error in the simulation.}

\item{verbose}{(optional, default = 10) be verbose}
}
\value{
GREGWT
}
\description{
Implementation of the GREGWT algorithm in the R language
}
\examples{
library('GREGWT')
data("GREGWT.census")
data("GREGWT.survey")

Simulation.Data <- prepareData(
  GREGWT.census, GREGWT.survey,
  survey_id=FALSE,
  pop_benchmark=c(1,11),
  census_categories=seq(2,24),
  survey_categories=seq(1,3)
)

# reweight for 4 areas
areas <- c("02", "11", "04011", "04012")
for(acode in areas){
    Weights.GREGWT = GREGWT(
      data_in=Simulation.Data,
      area_code=acode)
    print(mean(Weights.GREGWT$final_weights))
}

# reweight and plot the results for a single area
Tx = Simulation.Data$Tx[which(Simulation.Data$area_id==acode), ]
X = as.data.frame(Simulation.Data$X)
X_complete = as.data.frame(Simulation.Data$X_complete)
Pop = Simulation.Data$total_pop[which(Simulation.Data$area_id==acode), ]
Pop = Pop$pop
Weights.GREGWT.02 <- GREGWT(
  Tx = Tx,
  dx_input = Simulation.Data$dx,
  X_input = X,
  X_complete_input = X_complete,
  area_pop = Pop
  )

plot(Weights.GREGWT.02)
print(Weights.GREGWT.02)
summary(Weights.GREGWT.02)
}
\author{
M. Estebna Munoz H.
}

